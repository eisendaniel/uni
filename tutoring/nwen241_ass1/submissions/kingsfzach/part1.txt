Task 1.
1)
A)	Invalid – Reserved word
B)	Valid
C)	Invalid - $ not allowed
D)	Invalid

2)
A)	15
B)	2
C)	1
D)	1

3)  C1: 68, C2: 52, C3: 63
A)	183
B)	3
C)	156
D)	2652

Task 2.

1)	Long - because of the conversion hierarchy the resulting type will be of type Long.
2)	Result: 8 – both “?” and “:” are part of the conditional operator’s syntax it means that if the first statement (6>5) is true then the left-hand side of: is the true value and the right-hand side is the false value of the Boolean statement
3)	The result of the expression will be a double and you are then trying to assign this double to an int, and operation (modulus) only works with integers
4)	See Below:

Int main (void){

for(int j=5; j>=0; j - -){
	printf(“%d”,j);
}
Return 0;
}

Task 3.

1.	Using a c compiler, I checked my answer and found:

int main () {
int i = 5, j = 10, k = 1;
(k += 3*--i) - j++;
printf("i: %d , j:%d , k: %d",i,j,k);
}

Step by step:

K= 1 ,  i=5 , i--=4
=1 += 3*4
=1+=12
K=13
I=4
J++ = 11
J=11

I: 4
J:11
K:13

2.	The output will be 3 this is because when the strlen() command reaches a null character it stops counting the characters in the string so will therefore return 3 as it only counted (One).
