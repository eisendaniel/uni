Task 1
1. a) invalid
   b) valid
   c) invalid
   d) invalid
2. a) 15
   b) 2
   c) 1
   d) 1
3. c1 'D' 68; c2 '4' 52; c3 '?' 63; 'A' 65; 'c' 53; '3' 51
   a) 183
   b) 3
   c) 156
   d) 2652

Task 2
1. It's an addition statement, but implicit type conversion is done. Char converts
   to an int when added (c+i) and then the int is converted to a long ((c+i)+l).
2. k = 8. The second line of code is a ternary statement. 
   The boolean statement (first part before the '?') is evaulated, 
   and if the input is 'true' the first value is asigned, and if false, 
   second part is assigned. Basically a shortened if-else statement.
3. Yes, there is a problem because the double value of 10.0/4 is being 'mod'ed 
   with an int
4. int main (void) { 
	for(int j = 5; j >= 0; --j) {
		printf("%d ", j-1);
	}
   }

Task 3
1. (k += 3*--i) - j++
   (k += 3*4) - 10
   (k += 12) - 10
   (k + 12) - 10
   (1 + 12) - 10 
   13 - 10
   k = 3
2. 3 because the library will count until the first null terminator is found, 
   so only "One" was counted.

   

